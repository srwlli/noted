{
  "title": "Conditional Card Header Background Color with Smooth Animation",
  "dateCreated": "2025-10-05",
  "status": "planned",
  "priority": "high",

  "overview": {
    "description": "Add visual feedback when cards are active/expanded by highlighting the header background with selectedSurface color.",
    "userNeed": [
      "Clear visual indication of which card is currently active/expanded",
      "Consistent interaction feedback across all card types",
      "Better visual hierarchy when multiple cards are present"
    ],
    "businessValue": [
      "Improves UX with clear visual feedback",
      "Reduces cognitive load by showing active state",
      "Creates consistent behavior across 3 pages (Notes, Info, Settings)"
    ]
  },

  "currentState": {
    "notesPage": {
      "file": "app/(tabs)/index.tsx",
      "component": "NoteItem",
      "behavior": "Card body changes background when menu open (isMenuOpen)",
      "issue": "Header doesn't change color, only the card body"
    },
    "infoPage": {
      "file": "app/(tabs)/info.tsx",
      "cards": [
        "DownloadCard",
        "QuickStartCard",
        "TechStackCard",
        "ComingSoonCard",
        "ContactCard"
      ],
      "behavior": "Cards expand/collapse with isExpanded prop",
      "issue": "No header color change when expanded"
    },
    "settingsPage": {
      "file": "app/(tabs)/settings.tsx",
      "cards": [
        "ThemeSettingsCard",
        "ProfileSettingsCard",
        "AccountSettingsCard",
        "DevSettingsCard"
      ],
      "behavior": "Cards expand/collapse with isExpanded prop",
      "issue": "No header color change when expanded"
    }
  },

  "solution": {
    "approach": "Add headerActive prop to Card component that applies colors.selectedSurface to header background",
    "colorUsed": "colors.selectedSurface (already exists in theme system)",
    "benefit": "Consistent visual feedback across all card types using existing theme color"
  },

  "implementation": {
    "file1_coreComponent": {
      "file": "components/common/card.tsx",
      "totalChanges": 4,
      "changes": [
        {
          "location": "Line ~70 (CardProps interface)",
          "type": "Add prop",
          "code": "/**\n * If true, header background uses selectedSurface color.\n * Used to indicate active/expanded state.\n * @default false\n */\nheaderActive?: boolean;"
        },
        {
          "location": "Line ~72 (Function parameters)",
          "type": "Add parameter",
          "before": "export function Card({\n  isAccordion = true,\n  isExpanded = false,\n  onToggle,\n  headerContent,\n  children,\n  style,\n}: CardProps)",
          "after": "export function Card({\n  isAccordion = true,\n  isExpanded = false,\n  onToggle,\n  headerContent,\n  children,\n  style,\n  headerActive = false,\n}: CardProps)"
        },
        {
          "location": "Lines ~96-108 (Header rendering)",
          "type": "Add conditional background",
          "code": "// TouchableOpacity header (accordion mode):\nstyle={[\n  styles.header,\n  {\n    borderBottomColor: colors.border,\n    backgroundColor: headerActive ? colors.selectedSurface : colors.surface,\n  }\n]}\n\n// View header (static mode):\nstyle={[\n  styles.header,\n  {\n    borderBottomColor: colors.border,\n    backgroundColor: headerActive ? colors.selectedSurface : colors.surface,\n  }\n]}"
        },
        {
          "location": "Line ~127 (styles.header)",
          "type": "Add smooth transition animation",
          "code": "header: {\n  flexDirection: 'row',\n  alignItems: 'center',\n  gap: 12,\n  padding: 16,\n  borderBottomWidth: 1,\n  transition: 'background-color 0.15s ease-out', // Smooth fade (web only)\n}",
          "notes": "CSS transition works on web/PWA, gracefully ignored on React Native"
        }
      ]
    },

    "file2_noteItem": {
      "file": "components/note-item.tsx",
      "totalChanges": 1,
      "changes": [
        {
          "location": "Line ~119",
          "type": "Add headerActive prop, simplify style",
          "before": "<Card\n  isAccordion={false}\n  style={{\n    backgroundColor: isMenuOpen ? colors.selectedSurface : colors.surface,\n  }}",
          "after": "<Card\n  isAccordion={false}\n  headerActive={isMenuOpen}\n  style={{\n    backgroundColor: colors.surface,\n  }}",
          "reasoning": "Remove duplicate conditional styling - headerActive handles header color"
        }
      ]
    },

    "files3to7_infoCards": {
      "files": [
        "components/info-cards/download-card.tsx",
        "components/info-cards/quick-start-card.tsx",
        "components/info-cards/tech-stack-card.tsx",
        "components/info-cards/coming-soon-card.tsx",
        "components/info-cards/contact-card.tsx"
      ],
      "totalChanges": 5,
      "changePattern": {
        "location": "Card component usage (around line 34)",
        "type": "Add headerActive prop",
        "before": "<Card\n  isAccordion={true}\n  isExpanded={isExpanded}\n  onToggle={onToggle}\n  headerContent={...}\n>",
        "after": "<Card\n  isAccordion={true}\n  isExpanded={isExpanded}\n  onToggle={onToggle}\n  headerActive={isExpanded}\n  headerContent={...}\n>",
        "reasoning": "When card expands, header should highlight to show active state"
      }
    },

    "files8to11_settingsCards": {
      "files": [
        "components/settings-cards/theme-settings-card.tsx",
        "components/settings-cards/profile-settings-card.tsx",
        "components/settings-cards/account-settings-card.tsx",
        "components/settings-cards/dev-settings-card.tsx"
      ],
      "totalChanges": 4,
      "changePattern": {
        "location": "Card component usage",
        "type": "Add headerActive prop",
        "before": "<Card\n  isAccordion={true}\n  isExpanded={isExpanded}\n  onToggle={onToggle}\n  headerContent={...}\n>",
        "after": "<Card\n  isAccordion={true}\n  isExpanded={isExpanded}\n  onToggle={onToggle}\n  headerActive={isExpanded}\n  headerContent={...}\n>",
        "reasoning": "When settings section expands, header should highlight to show active state"
      }
    }
  },

  "fileSummary": {
    "totalFiles": 11,
    "breakdown": {
      "coreComponent": 1,
      "noteCards": 1,
      "infoCards": 5,
      "settingsCards": 4
    },
    "totalLineChanges": 14,
    "breakdown_changes": {
      "propAddition": 1,
      "functionParam": 1,
      "headerStyles": 2,
      "animationStyle": 1,
      "cardUsages": 9
    }
  },

  "testingChecklist": {
    "notesPage": [
      "Open note card (...) menu → verify header background changes to selectedSurface",
      "Close menu → verify header returns to normal surface color",
      "Test with multiple themes to ensure color works across all themes"
    ],
    "infoPage": [
      "Expand any card → verify header background changes to selectedSurface",
      "Collapse card → verify header returns to normal surface color",
      "Expand different card → verify only active card header is highlighted",
      "Test accordion behavior (one card closes when another opens)"
    ],
    "settingsPage": [
      "Expand any settings card → verify header background changes",
      "Collapse card → verify header returns to normal",
      "Test with all 4 settings cards",
      "Verify accordion pattern works correctly"
    ],
    "themeCompatibility": [
      "Test with Monochrome theme",
      "Test with Ocean theme",
      "Test with at least 2 other themes",
      "Verify selectedSurface color is visible and distinct from surface"
    ]
  },

  "visualBehavior": {
    "default": "Header has colors.surface background (same as card body)",
    "active": "Header has colors.selectedSurface background (highlighted)",
    "transition": "Smooth 150ms fade (web/PWA) or instant (React Native)",
    "consistency": "All cards use same color from theme system",
    "note": "Body background stays surface color - only header changes"
  },

  "estimatedTimeline": "30-45 minutes",

  "dependencies": [
    "colors.selectedSurface exists in all 10 themes (already implemented)",
    "Card component is universal (already used across all pages)",
    "No new dependencies needed"
  ],

  "risks": [
    "Minor: Need to update 11 files - potential for missing one",
    "Minor: Ensure selectedSurface color is distinct enough in all themes"
  ],

  "mitigations": [
    "Use grep/search to find all Card usages and verify all are updated",
    "Test with multiple themes to ensure visibility",
    "Review selectedSurface colors in theme.ts if needed"
  ],

  "futureEnhancements": {
    "reactNativeAnimation": "Add React Native Animated API for smooth transitions on mobile (currently web-only)",
    "customColor": "Allow passing custom active color via prop (not just selectedSurface)",
    "gradient": "Consider gradient header backgrounds for premium themes",
    "accessibilityState": "Add accessibilityState={{selected: headerActive}} for screen readers"
  },

  "notes": [
    "This is a pure visual enhancement - no functional changes",
    "Reuses existing theme color (selectedSurface) for consistency",
    "Minimal code changes - just adding one prop and passing it through",
    "Improves accessibility by providing clear visual feedback",
    "Maintains existing card behavior - only adds visual indicator",
    "IMPORTANT: Note cards - ONLY header changes color, body stays surface (not selectedSurface)",
    "Animation is CSS-only (works on web), gracefully degrades on React Native",
    "High priority - quick implementation (30-45 min) with high UX impact"
  ]
}
