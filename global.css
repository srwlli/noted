@tailwind base;
@tailwind components;
@tailwind utilities;

/* PWA Safe Area Utilities */
@layer utilities {
  /* Top safe area with additional padding */
  .safe-area-top {
    padding-top: calc(env(safe-area-inset-top, 0px) + 12px);
  }

  /* Bottom safe area */
  .safe-area-bottom {
    padding-bottom: env(safe-area-inset-bottom, 0px);
  }

  /* Horizontal safe areas */
  .safe-area-x {
    padding-left: env(safe-area-inset-left, 0px);
    padding-right: env(safe-area-inset-right, 0px);
  }

  /* For fixed headers */
  .fixed-header-safe {
    top: 0;
    padding-top: calc(env(safe-area-inset-top, 0px) + 12px);
  }

  /* For fixed bottom navigation */
  .fixed-bottom-safe {
    bottom: 0;
    padding-bottom: calc(env(safe-area-inset-bottom, 0px) + 8px);
  }

  /* Web platform specific styles */
  @media (hover: hover) and (pointer: fine) {
    /* Desktop/Web specific overrides if needed */
  }
}

/* iOS PWA specific fixes */
@supports (-webkit-touch-callout: none) {
  /* iOS Safari specific styles */
  .ios-safe-top {
    padding-top: calc(env(safe-area-inset-top, 20px) + 12px);
  }

  .ios-safe-bottom {
    padding-bottom: calc(env(safe-area-inset-bottom, 0px) + 8px);
  }
}

/* Prevent overscroll on web */
html.web-platform {
  overscroll-behavior: none;
  -webkit-overflow-scrolling: touch;
}

/* React Native Web overrides for safe areas */
@media (display-mode: standalone) {
  /* PWA standalone mode styles */
  body {
    overflow: hidden;
    overscroll-behavior: none;
  }

  /* Target React Native Web generated content */
  #root {
    height: 100vh !important;
    overflow: hidden !important;
  }
}

/* PWA Standalone body class styling */
body.pwa-standalone {
  overflow: hidden !important;
  overscroll-behavior: none !important;
  -webkit-overflow-scrolling: touch !important;
  position: fixed !important;
  width: 100% !important;
  height: 100% !important;
}

body.pwa-standalone #root {
  height: 100vh !important;
  overflow: hidden !important;
  position: relative !important;
}

/* Force proper safe area handling in React Native Web */
@supports (padding: env(safe-area-inset-top)) {
  /* These styles will apply to React Native Web elements */
  [data-reactroot] {
    padding-top: env(safe-area-inset-top);
    padding-bottom: env(safe-area-inset-bottom);
    padding-left: env(safe-area-inset-left);
    padding-right: env(safe-area-inset-right);
    box-sizing: border-box;
  }
}